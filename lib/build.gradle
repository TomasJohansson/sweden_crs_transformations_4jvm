plugins {
    // Apply the scala Plugin to add support for Scala.
    id 'scala'

    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'

    // Apply the org.jetbrains.kotlin.jvm Plugin to add support for Kotlin.
    id 'org.jetbrains.kotlin.jvm' version '1.4.31'
}

group 'com.programmerare.crs-transformation'
version '0.1-SNAPSHOT'

def theJavaVersion = JavaVersion.VERSION_1_6
sourceCompatibility=theJavaVersion
targetCompatibility=theJavaVersion

repositories {
    jcenter()
    mavenCentral()
}

dependencies {
    // https://mvnrepository.com/artifact/org.scala-lang/scala-library
    implementation 'org.scala-lang:scala-library:2.13.5'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    // https://mvnrepository.com/artifact/com.google.guava/guava
    testImplementation 'com.google.guava:guava:30.1-jre'

    // Use Scalatest for testing our library
    // https://mvnrepository.com/artifact/junit/junit
    testImplementation 'junit:junit:4.13.2'

    // https://mvnrepository.com/artifact/org.scalatest/scalatest
    testImplementation 'org.scalatest:scalatest_2.13:3.2.6'

    // https://mvnrepository.com/artifact/org.scalatestplus/junit-4-12
    testImplementation 'org.scalatestplus:junit-4-12_2.13:3.2.2.0'

    // Need scala-xml at test runtime
    // https://mvnrepository.com/artifact/org.scala-lang.modules/scala-xml
    // testRuntimeOnly 'org.scala-lang.modules:scala-xml_2.13:1.3.0'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    // https://mvnrepository.com/artifact/org.apache.commons/commons-math3
    // api 'org.apache.commons:commons-math3:3.6.1'

    // ------------------------------------------------------
    // The Kotlin support below was added by generating a Kotlin project and see what was added into the build.gradle file
    // The below dependency was generated when using Intellij IDEA to generate a gradle/Kotlin project:
    //      implementation "org.jetbrains.kotlin:kotlin-stdlib"
    // But those below was generated when instead using "gradle init" 
    implementation platform('org.jetbrains.kotlin:kotlin-bom') // Align versions of all Kotlin components
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    testImplementation 'org.jetbrains.kotlin:kotlin-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit'
    // ------------------------------------------------------    
}
